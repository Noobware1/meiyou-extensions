name: Dart Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Dart
        uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: dart pub get

      - name: Build and Generate Files
        run: |
          cd bin
          dart run build.dart

      - name: Commit and Push Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

          git checkout -b builds
          mv builds/* .
          git add .
          git commit -m "Auto-generated builds"
          # Fetch remote changes
          git fetch origin builds

          # Rebase local changes on top of remote changes
          git rebase origin/builds
          # Automatically resolve conflicts using the recursive strategy
          git -c 'merge.ours.driver=git checkout --ours %A' \
              -c 'merge.ours.driver=git checkout --theirs %A' \
              -c 'merge.ours.driver=git checkout --ours %A' \
              rebase --skip || true

          # Continue with the rebase
          git rebase --continue
          git push origin builds
